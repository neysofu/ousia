package ousia.util.romans

private val roman_numerals = (
  ("I", "X", "C", "M"),
  ("V", "L", "D")
)

function arabic_to_roman(n) = {
  val string = n to String
  val range = Range(string.size, 0)
  (string zip (range) map (digit_to_roman(_, _))).sum
}

function digit_to_roman(n, i) = {
  val I = romanNumerals(1,i)
  val V = romanNumerals(5,i)
  val X = romanNumerals(1,i+1)
  n match {
    case 0 => String.empty
    case 1,2,3 => I * n
    case 4 => I + V
    case 5 => V
    case 6 => V + I
    case 7,8,9 => I * (10-n) + X
  }
}
