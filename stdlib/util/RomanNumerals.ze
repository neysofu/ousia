let ROMAN_NUMERALS = [
  1: ["I", "X", "C", "M"],
  5: ["V", "L", "D"]
]

let ROMAN_TO_ARABIC (N) = {
	if N slide (2,1) assert_all (_ in ROMAN_NUMERALS[5])
	if N slide (3,1) assert_any (ABC => ABC all (ABC[0] == _))
if N slide (2,1) assert_all
}

let ARABIC_TO_ROMAN (N) = N as STRING enumerate map DIGIT_TO_ROMAN_STRING sum

let DIGIT_TO_ROMAN_STRING (DIGIT,PLACE) = {
  let I: ROMAN_NUMERALS (1,PLACE)
  let V: ROMAN_NUMERALS (5,PLACE)
  let X: ROMAN_NUMERALS (1,PLACE+1)
  N match {
    0 => STRING empty
    1,2,3 => I*N
    4 => I+V
    5 => V
    6 => V+I
    7,8,9 => I*(10-N)+X
  }
}
